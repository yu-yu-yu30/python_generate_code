declare database tradedb;
class AGENT_STATUS
{
     string<4> 	MK_CODE;
     string<20>	SEAT_ID;
     string<20>	HOLDER_ACC;
     int8      	ACCOUNT_CODE;
     int8      	ASSET_NO;
     int8      	COMBI_NO;
     string<5> 	STATUS;
     string<10>	AGENT_NAME;
     unique tree<AGENT_NAME>	AGENT_NAME_INDEX;
}

class ACC_PORTFOLIO
{
     int8      	FUND_ID;
     int8      	CELL_ID;
     int8      	PORTFOLIO_ID;
     string<50>	PORTFOLIO_NAME;
     string<50>	REMARK;
     int8      	OPER_ID;
     string<30>	UPD_TIME;
     string<1> 	IF_DEFAULT;
     string<1> 	IS_CLOSED;
     tree<PORTFOLIO_ID>	PORTFOLIO_ID_INDEX;
     tree<CELL_ID>	CELL_ID_INDEX;
     unique tree<CELL_ID,PORTFOLIO_ID>	CELL_ID_PORTFOLIO_ID_INDEX;
}

class ACC_PTFLCAP
{
     int8      	FUND_ID;
     int8      	CELL_ID;
     int8      	PORTFOLIO_ID;
     string<6> 	CAP_TYPE;
     double<8> 	CURR_CAP;
     double<8> 	CURR_FROZ;
     double<8> 	CURR_UNFROZ;
     double<8> 	INV_CAP;
     double<8> 	INV_FROZ;
     double<8> 	DEAL_CAP;
     double<8> 	IVCURR_FROZ;
     double<8> 	OUT_CURR;
     double<8> 	IN_CURR;
     double<8> 	MARGIN;
     double<8> 	PROFIT;
     double<8> 	PREMIUMIN_COMING;
     double<8> 	PREMIUM_PAID;
     double<8> 	PREMIUM_FREEZED;
     string<20>	DATE;
     string<20>	LAST_DATE;
     double<8> 	TRADE_FEE;
     double<8> 	BEGIN_SUM_FEE;
     tree<CAP_TYPE>	CAP_TYPE_INDEX;
     tree<PORTFOLIO_ID>	PORTFOLIO_ID_INDEX;
     tree<PORTFOLIO_ID,CAP_TYPE>	PORTFOLIO_ID_CAP_TYPE_INDEX;
     tree<FUND_ID>	FUND_ID_INDEX;
     tree<FUND_ID,CAP_TYPE>	FUND_ID_CAP_TYPE_INDEX;
     tree<FUND_ID,PORTFOLIO_ID>	FUND_ID_PORTFOLIO_ID_INDEX;
     unique tree<FUND_ID,PORTFOLIO_ID,CAP_TYPE>	FUND_ID_PORTFOLIO_ID_CAP_TYPE_INDEX;
}

class OTC_HOLD_DETAILS
{
     string<6> 	BSTP;
     int8      	PTFL_ID;
     string<6> 	MK_CODE;
     string<20>	VARI_CODE;
     double<8> 	OPEN_PRICE;
     double<8> 	HOLD_HANDS;
     string<20>	OPEN_DATE;
     string<20>	OPEN_TIME;
     string<50>	DEAL_NO;
     double<8> 	SETTLEMENT_PRICE;
     double<8> 	CLOSED_HANDS;
     double<8> 	HOLD_MARGIN;
     tree<DEAL_NO>	DEAL_NO_INDEX;
     tree<BSTP>	BSTP_INDEX;
     unique tree<BSTP,DEAL_NO>	BSTP_DEAL_NO_INDEX;
}

class OTC_STOCK_INDEX_FUTURE_TEM
{
     string<17>	ENTRUST_NO;
     int8      	DONE_HANDS;
     double<8> 	DONE_AMT;
     double<8> 	HANDLE_FEE;
     double<8> 	MARGIN;
     double<8> 	FEE;
     int8      	FROZEN_HOLDS;
     string<6> 	BS_FLAG;
     unique tree<ENTRUST_NO>	ENTRUST_NO_INDEX;
}

class ACC_PTFLHLD
{
     int8      	FUND_ID;
     int8      	CELL_ID;
     int8      	PORTFOLIO_ID;
     string<6> 	MK_CODE;
     string<20>	STK_CODE;
     string<6> 	STK_TP;
     string<6> 	POSITION_DIR;
     string<6> 	HEDGING_FLAG;
     double<8> 	STK_QTY;
     double<8> 	STK_DEAL_QTY;
     double<8> 	STK_FROZ_QTY;
     double<8> 	INS_QTY;
     double<8> 	INS_FROZ_QTY;
     double<8> 	STK_COST;
     double<8> 	BUY_QTY;
     double<8> 	BUY_CURR;
     double<8> 	BUY_FEE;
     double<8> 	SELL_QTY;
     double<8> 	STK_SUM_PROFIT;
     double<8> 	SELL_CURR;
     double<8> 	SELL_FEE;
     double<8> 	MARGIN;
     double<8> 	THEORETIC_MARGIN;
     double<8> 	ACCU_FEE;
     double<8> 	STK_SUM_COST;
     double<8> 	SELL_PROFIT;
     double<8> 	ESELL_PROFIT;
     string<5> 	BB_DIR;
     tree<POSITION_DIR>	POSITION_DIR_INDEX;
     tree<STK_CODE>	STK_CODE_INDEX;
     tree<STK_CODE,POSITION_DIR>	STK_CODE_POSITION_DIR_INDEX;
     tree<MK_CODE>	MK_CODE_INDEX;
     tree<MK_CODE,POSITION_DIR>	MK_CODE_POSITION_DIR_INDEX;
     tree<MK_CODE,STK_CODE>	MK_CODE_STK_CODE_INDEX;
     tree<MK_CODE,STK_CODE,POSITION_DIR>	MK_CODE_STK_CODE_POSITION_DIR_INDEX;
     tree<PORTFOLIO_ID>	PORTFOLIO_ID_INDEX;
     tree<PORTFOLIO_ID,POSITION_DIR>	PORTFOLIO_ID_POSITION_DIR_INDEX;
     tree<PORTFOLIO_ID,STK_CODE>	PORTFOLIO_ID_STK_CODE_INDEX;
     tree<PORTFOLIO_ID,STK_CODE,POSITION_DIR>	PORTFOLIO_ID_STK_CODE_POSITION_DIR_INDEX;
     tree<PORTFOLIO_ID,MK_CODE>	PORTFOLIO_ID_MK_CODE_INDEX;
     tree<PORTFOLIO_ID,MK_CODE,POSITION_DIR>	PORTFOLIO_ID_MK_CODE_POSITION_DIR_INDEX;
     tree<PORTFOLIO_ID,MK_CODE,STK_CODE>	PORTFOLIO_ID_MK_CODE_STK_CODE_INDEX;
     unique tree<PORTFOLIO_ID,MK_CODE,STK_CODE,POSITION_DIR>	PORTFOLIO_ID_MK_CODE_STK_CODE_POSITION_DIR_INDEX;
}

class MD_STOCK
{
     string<5> 	MK_CODE;
     string<20>	STK_CODE;
     string<32>	STK_NAME;
     string<5> 	STK_TYPE;
     double<8> 	DEAL_UNIT;
     string<5> 	CURRENCY;
     double<8> 	PER_VOL_LIMIT;
     int8      	BUY_VOL_UNIT;
     int8      	SELL_VOL_UNIT;
     double<8> 	PRICE_CHANGE_UNIT;
     double<8> 	RAISE_LIMIT_PRICE;
     double<8> 	FALL_LIMIT_PRICE;
     string<6> 	STOP_TX_FLAG;
     string<6> 	FUND_REAL_BCK_FLAG;
     string<6> 	STK_REAL_BACK_FLAG;
     string<6> 	STK_DIRECTION;
     string<6> 	FUND_DIRECTION;
     string<6> 	FORBID_CANCEL_FLAG;
     string<6> 	FUND_DLVR_PRD;
     string<6> 	BS_FLAG;
     int8      	RPT_MAX_VOL;
     string<6> 	STK_DLVR_PRD;
     string<6> 	SAVE_UNIT;
     string<6> 	RPT_UNIT;
     string<20>	RELATIVE_STK_CODE;
     double<8> 	RAISE_RATIO;
     double<8> 	FALL_RATIO;
     int8      	DECLARE_NUMBER_UNIT;
     string<6> 	TRADE_UNIT_NAME;
     string<20>	BEGIN_DATE;
     int8      	MAX_VOL;
     string<20>	FIRST_DATE;
     string<20>	LAST_DATE;
     string<20>	DIV_DATE;
     string<20>	VALID_DATE;
     double<8> 	ZRJS;
     string<6> 	STK_VARIETY;
     string<6> 	STATUS;
     int8      	MULTIPLIER;
     tree<STK_CODE>	STK_CODE_INDEX;
     tree<MK_CODE>	MK_CODE_INDEX;
     unique tree<MK_CODE,STK_CODE>	MK_CODE_STK_CODE_INDEX;
}

class HOLDER2CELL
{
     string<4> 	MK_CODE;
     string<20>	SEAT_ID;
     string<20>	HOLDER_ACC;
     int8      	FUND_ID;
     int8      	CELL_ID;
     string<2> 	HEDGING_FLAG;
     int8      	USER_ID;
     string<30>	MEMO;
     int8      	UPD_DATE;
     string<6> 	HOLD_TYPE;
     string<16>	BROKE_ID;
     tree<BROKE_ID>	BROKE_ID_INDEX;
     tree<HOLD_TYPE>	HOLD_TYPE_INDEX;
     tree<HOLD_TYPE,BROKE_ID>	HOLD_TYPE_BROKE_ID_INDEX;
     tree<CELL_ID>	CELL_ID_INDEX;
     tree<CELL_ID,BROKE_ID>	CELL_ID_BROKE_ID_INDEX;
     tree<CELL_ID,HOLD_TYPE>	CELL_ID_HOLD_TYPE_INDEX;
     tree<CELL_ID,HOLD_TYPE,BROKE_ID>	CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<FUND_ID>	FUND_ID_INDEX;
     tree<FUND_ID,BROKE_ID>	FUND_ID_BROKE_ID_INDEX;
     tree<FUND_ID,HOLD_TYPE>	FUND_ID_HOLD_TYPE_INDEX;
     tree<FUND_ID,HOLD_TYPE,BROKE_ID>	FUND_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<FUND_ID,CELL_ID>	FUND_ID_CELL_ID_INDEX;
     tree<FUND_ID,CELL_ID,BROKE_ID>	FUND_ID_CELL_ID_BROKE_ID_INDEX;
     tree<FUND_ID,CELL_ID,HOLD_TYPE>	FUND_ID_CELL_ID_HOLD_TYPE_INDEX;
     tree<FUND_ID,CELL_ID,HOLD_TYPE,BROKE_ID>	FUND_ID_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<HOLDER_ACC>	HOLDER_ACC_INDEX;
     tree<HOLDER_ACC,BROKE_ID>	HOLDER_ACC_BROKE_ID_INDEX;
     tree<HOLDER_ACC,HOLD_TYPE>	HOLDER_ACC_HOLD_TYPE_INDEX;
     tree<HOLDER_ACC,HOLD_TYPE,BROKE_ID>	HOLDER_ACC_HOLD_TYPE_BROKE_ID_INDEX;
     tree<HOLDER_ACC,CELL_ID>	HOLDER_ACC_CELL_ID_INDEX;
     tree<HOLDER_ACC,CELL_ID,BROKE_ID>	HOLDER_ACC_CELL_ID_BROKE_ID_INDEX;
     tree<HOLDER_ACC,CELL_ID,HOLD_TYPE>	HOLDER_ACC_CELL_ID_HOLD_TYPE_INDEX;
     tree<HOLDER_ACC,CELL_ID,HOLD_TYPE,BROKE_ID>	HOLDER_ACC_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<HOLDER_ACC,FUND_ID>	HOLDER_ACC_FUND_ID_INDEX;
     tree<HOLDER_ACC,FUND_ID,BROKE_ID>	HOLDER_ACC_FUND_ID_BROKE_ID_INDEX;
     tree<HOLDER_ACC,FUND_ID,HOLD_TYPE>	HOLDER_ACC_FUND_ID_HOLD_TYPE_INDEX;
     tree<HOLDER_ACC,FUND_ID,HOLD_TYPE,BROKE_ID>	HOLDER_ACC_FUND_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<HOLDER_ACC,FUND_ID,CELL_ID>	HOLDER_ACC_FUND_ID_CELL_ID_INDEX;
     tree<HOLDER_ACC,FUND_ID,CELL_ID,BROKE_ID>	HOLDER_ACC_FUND_ID_CELL_ID_BROKE_ID_INDEX;
     tree<HOLDER_ACC,FUND_ID,CELL_ID,HOLD_TYPE>	HOLDER_ACC_FUND_ID_CELL_ID_HOLD_TYPE_INDEX;
     tree<HOLDER_ACC,FUND_ID,CELL_ID,HOLD_TYPE,BROKE_ID>	HOLDER_ACC_FUND_ID_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<SEAT_ID>	SEAT_ID_INDEX;
     tree<SEAT_ID,BROKE_ID>	SEAT_ID_BROKE_ID_INDEX;
     tree<SEAT_ID,HOLD_TYPE>	SEAT_ID_HOLD_TYPE_INDEX;
     tree<SEAT_ID,HOLD_TYPE,BROKE_ID>	SEAT_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<SEAT_ID,CELL_ID>	SEAT_ID_CELL_ID_INDEX;
     tree<SEAT_ID,CELL_ID,BROKE_ID>	SEAT_ID_CELL_ID_BROKE_ID_INDEX;
     tree<SEAT_ID,CELL_ID,HOLD_TYPE>	SEAT_ID_CELL_ID_HOLD_TYPE_INDEX;
     tree<SEAT_ID,CELL_ID,HOLD_TYPE,BROKE_ID>	SEAT_ID_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<SEAT_ID,FUND_ID>	SEAT_ID_FUND_ID_INDEX;
     tree<SEAT_ID,FUND_ID,BROKE_ID>	SEAT_ID_FUND_ID_BROKE_ID_INDEX;
     tree<SEAT_ID,FUND_ID,HOLD_TYPE>	SEAT_ID_FUND_ID_HOLD_TYPE_INDEX;
     tree<SEAT_ID,FUND_ID,HOLD_TYPE,BROKE_ID>	SEAT_ID_FUND_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<SEAT_ID,FUND_ID,CELL_ID>	SEAT_ID_FUND_ID_CELL_ID_INDEX;
     tree<SEAT_ID,FUND_ID,CELL_ID,BROKE_ID>	SEAT_ID_FUND_ID_CELL_ID_BROKE_ID_INDEX;
     tree<SEAT_ID,FUND_ID,CELL_ID,HOLD_TYPE>	SEAT_ID_FUND_ID_CELL_ID_HOLD_TYPE_INDEX;
     tree<SEAT_ID,FUND_ID,CELL_ID,HOLD_TYPE,BROKE_ID>	SEAT_ID_FUND_ID_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<SEAT_ID,HOLDER_ACC>	SEAT_ID_HOLDER_ACC_INDEX;
     tree<SEAT_ID,HOLDER_ACC,BROKE_ID>	SEAT_ID_HOLDER_ACC_BROKE_ID_INDEX;
     tree<SEAT_ID,HOLDER_ACC,HOLD_TYPE>	SEAT_ID_HOLDER_ACC_HOLD_TYPE_INDEX;
     tree<SEAT_ID,HOLDER_ACC,HOLD_TYPE,BROKE_ID>	SEAT_ID_HOLDER_ACC_HOLD_TYPE_BROKE_ID_INDEX;
     tree<SEAT_ID,HOLDER_ACC,CELL_ID>	SEAT_ID_HOLDER_ACC_CELL_ID_INDEX;
     tree<SEAT_ID,HOLDER_ACC,CELL_ID,BROKE_ID>	SEAT_ID_HOLDER_ACC_CELL_ID_BROKE_ID_INDEX;
     tree<SEAT_ID,HOLDER_ACC,CELL_ID,HOLD_TYPE>	SEAT_ID_HOLDER_ACC_CELL_ID_HOLD_TYPE_INDEX;
     tree<SEAT_ID,HOLDER_ACC,CELL_ID,HOLD_TYPE,BROKE_ID>	SEAT_ID_HOLDER_ACC_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<SEAT_ID,HOLDER_ACC,FUND_ID>	SEAT_ID_HOLDER_ACC_FUND_ID_INDEX;
     tree<SEAT_ID,HOLDER_ACC,FUND_ID,BROKE_ID>	SEAT_ID_HOLDER_ACC_FUND_ID_BROKE_ID_INDEX;
     tree<SEAT_ID,HOLDER_ACC,FUND_ID,HOLD_TYPE>	SEAT_ID_HOLDER_ACC_FUND_ID_HOLD_TYPE_INDEX;
     tree<SEAT_ID,HOLDER_ACC,FUND_ID,HOLD_TYPE,BROKE_ID>	SEAT_ID_HOLDER_ACC_FUND_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<SEAT_ID,HOLDER_ACC,FUND_ID,CELL_ID>	SEAT_ID_HOLDER_ACC_FUND_ID_CELL_ID_INDEX;
     tree<SEAT_ID,HOLDER_ACC,FUND_ID,CELL_ID,BROKE_ID>	SEAT_ID_HOLDER_ACC_FUND_ID_CELL_ID_BROKE_ID_INDEX;
     tree<SEAT_ID,HOLDER_ACC,FUND_ID,CELL_ID,HOLD_TYPE>	SEAT_ID_HOLDER_ACC_FUND_ID_CELL_ID_HOLD_TYPE_INDEX;
     tree<SEAT_ID,HOLDER_ACC,FUND_ID,CELL_ID,HOLD_TYPE,BROKE_ID>	SEAT_ID_HOLDER_ACC_FUND_ID_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE>	MK_CODE_INDEX;
     tree<MK_CODE,BROKE_ID>	MK_CODE_BROKE_ID_INDEX;
     tree<MK_CODE,HOLD_TYPE>	MK_CODE_HOLD_TYPE_INDEX;
     tree<MK_CODE,HOLD_TYPE,BROKE_ID>	MK_CODE_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,CELL_ID>	MK_CODE_CELL_ID_INDEX;
     tree<MK_CODE,CELL_ID,BROKE_ID>	MK_CODE_CELL_ID_BROKE_ID_INDEX;
     tree<MK_CODE,CELL_ID,HOLD_TYPE>	MK_CODE_CELL_ID_HOLD_TYPE_INDEX;
     tree<MK_CODE,CELL_ID,HOLD_TYPE,BROKE_ID>	MK_CODE_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,FUND_ID>	MK_CODE_FUND_ID_INDEX;
     tree<MK_CODE,FUND_ID,BROKE_ID>	MK_CODE_FUND_ID_BROKE_ID_INDEX;
     tree<MK_CODE,FUND_ID,HOLD_TYPE>	MK_CODE_FUND_ID_HOLD_TYPE_INDEX;
     tree<MK_CODE,FUND_ID,HOLD_TYPE,BROKE_ID>	MK_CODE_FUND_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,FUND_ID,CELL_ID>	MK_CODE_FUND_ID_CELL_ID_INDEX;
     tree<MK_CODE,FUND_ID,CELL_ID,BROKE_ID>	MK_CODE_FUND_ID_CELL_ID_BROKE_ID_INDEX;
     tree<MK_CODE,FUND_ID,CELL_ID,HOLD_TYPE>	MK_CODE_FUND_ID_CELL_ID_HOLD_TYPE_INDEX;
     tree<MK_CODE,FUND_ID,CELL_ID,HOLD_TYPE,BROKE_ID>	MK_CODE_FUND_ID_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,HOLDER_ACC>	MK_CODE_HOLDER_ACC_INDEX;
     tree<MK_CODE,HOLDER_ACC,BROKE_ID>	MK_CODE_HOLDER_ACC_BROKE_ID_INDEX;
     tree<MK_CODE,HOLDER_ACC,HOLD_TYPE>	MK_CODE_HOLDER_ACC_HOLD_TYPE_INDEX;
     tree<MK_CODE,HOLDER_ACC,HOLD_TYPE,BROKE_ID>	MK_CODE_HOLDER_ACC_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,HOLDER_ACC,CELL_ID>	MK_CODE_HOLDER_ACC_CELL_ID_INDEX;
     tree<MK_CODE,HOLDER_ACC,CELL_ID,BROKE_ID>	MK_CODE_HOLDER_ACC_CELL_ID_BROKE_ID_INDEX;
     tree<MK_CODE,HOLDER_ACC,CELL_ID,HOLD_TYPE>	MK_CODE_HOLDER_ACC_CELL_ID_HOLD_TYPE_INDEX;
     tree<MK_CODE,HOLDER_ACC,CELL_ID,HOLD_TYPE,BROKE_ID>	MK_CODE_HOLDER_ACC_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,HOLDER_ACC,FUND_ID>	MK_CODE_HOLDER_ACC_FUND_ID_INDEX;
     tree<MK_CODE,HOLDER_ACC,FUND_ID,BROKE_ID>	MK_CODE_HOLDER_ACC_FUND_ID_BROKE_ID_INDEX;
     tree<MK_CODE,HOLDER_ACC,FUND_ID,HOLD_TYPE>	MK_CODE_HOLDER_ACC_FUND_ID_HOLD_TYPE_INDEX;
     tree<MK_CODE,HOLDER_ACC,FUND_ID,HOLD_TYPE,BROKE_ID>	MK_CODE_HOLDER_ACC_FUND_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,HOLDER_ACC,FUND_ID,CELL_ID>	MK_CODE_HOLDER_ACC_FUND_ID_CELL_ID_INDEX;
     tree<MK_CODE,HOLDER_ACC,FUND_ID,CELL_ID,BROKE_ID>	MK_CODE_HOLDER_ACC_FUND_ID_CELL_ID_BROKE_ID_INDEX;
     tree<MK_CODE,HOLDER_ACC,FUND_ID,CELL_ID,HOLD_TYPE>	MK_CODE_HOLDER_ACC_FUND_ID_CELL_ID_HOLD_TYPE_INDEX;
     tree<MK_CODE,HOLDER_ACC,FUND_ID,CELL_ID,HOLD_TYPE,BROKE_ID>	MK_CODE_HOLDER_ACC_FUND_ID_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID>	MK_CODE_SEAT_ID_INDEX;
     tree<MK_CODE,SEAT_ID,BROKE_ID>	MK_CODE_SEAT_ID_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLD_TYPE>	MK_CODE_SEAT_ID_HOLD_TYPE_INDEX;
     tree<MK_CODE,SEAT_ID,HOLD_TYPE,BROKE_ID>	MK_CODE_SEAT_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,CELL_ID>	MK_CODE_SEAT_ID_CELL_ID_INDEX;
     tree<MK_CODE,SEAT_ID,CELL_ID,BROKE_ID>	MK_CODE_SEAT_ID_CELL_ID_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,CELL_ID,HOLD_TYPE>	MK_CODE_SEAT_ID_CELL_ID_HOLD_TYPE_INDEX;
     tree<MK_CODE,SEAT_ID,CELL_ID,HOLD_TYPE,BROKE_ID>	MK_CODE_SEAT_ID_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,FUND_ID>	MK_CODE_SEAT_ID_FUND_ID_INDEX;
     tree<MK_CODE,SEAT_ID,FUND_ID,BROKE_ID>	MK_CODE_SEAT_ID_FUND_ID_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,FUND_ID,HOLD_TYPE>	MK_CODE_SEAT_ID_FUND_ID_HOLD_TYPE_INDEX;
     tree<MK_CODE,SEAT_ID,FUND_ID,HOLD_TYPE,BROKE_ID>	MK_CODE_SEAT_ID_FUND_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,FUND_ID,CELL_ID>	MK_CODE_SEAT_ID_FUND_ID_CELL_ID_INDEX;
     tree<MK_CODE,SEAT_ID,FUND_ID,CELL_ID,BROKE_ID>	MK_CODE_SEAT_ID_FUND_ID_CELL_ID_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,FUND_ID,CELL_ID,HOLD_TYPE>	MK_CODE_SEAT_ID_FUND_ID_CELL_ID_HOLD_TYPE_INDEX;
     tree<MK_CODE,SEAT_ID,FUND_ID,CELL_ID,HOLD_TYPE,BROKE_ID>	MK_CODE_SEAT_ID_FUND_ID_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC>	MK_CODE_SEAT_ID_HOLDER_ACC_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,BROKE_ID>	MK_CODE_SEAT_ID_HOLDER_ACC_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,HOLD_TYPE>	MK_CODE_SEAT_ID_HOLDER_ACC_HOLD_TYPE_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,HOLD_TYPE,BROKE_ID>	MK_CODE_SEAT_ID_HOLDER_ACC_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,CELL_ID>	MK_CODE_SEAT_ID_HOLDER_ACC_CELL_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,CELL_ID,BROKE_ID>	MK_CODE_SEAT_ID_HOLDER_ACC_CELL_ID_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,CELL_ID,HOLD_TYPE>	MK_CODE_SEAT_ID_HOLDER_ACC_CELL_ID_HOLD_TYPE_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,CELL_ID,HOLD_TYPE,BROKE_ID>	MK_CODE_SEAT_ID_HOLDER_ACC_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,FUND_ID>	MK_CODE_SEAT_ID_HOLDER_ACC_FUND_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,FUND_ID,BROKE_ID>	MK_CODE_SEAT_ID_HOLDER_ACC_FUND_ID_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,FUND_ID,HOLD_TYPE>	MK_CODE_SEAT_ID_HOLDER_ACC_FUND_ID_HOLD_TYPE_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,FUND_ID,HOLD_TYPE,BROKE_ID>	MK_CODE_SEAT_ID_HOLDER_ACC_FUND_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,FUND_ID,CELL_ID>	MK_CODE_SEAT_ID_HOLDER_ACC_FUND_ID_CELL_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,FUND_ID,CELL_ID,BROKE_ID>	MK_CODE_SEAT_ID_HOLDER_ACC_FUND_ID_CELL_ID_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,FUND_ID,CELL_ID,HOLD_TYPE>	MK_CODE_SEAT_ID_HOLDER_ACC_FUND_ID_CELL_ID_HOLD_TYPE_INDEX;
     unique tree<MK_CODE,SEAT_ID,HOLDER_ACC,FUND_ID,CELL_ID,HOLD_TYPE,BROKE_ID>	MK_CODE_SEAT_ID_HOLDER_ACC_FUND_ID_CELL_ID_HOLD_TYPE_BROKE_ID_INDEX;
}

class HOLDER2SEAT
{
     string<4> 	MK_CODE;
     string<20>	SEAT_ID;
     string<20>	HOLDER_ACC;
     int8      	OPER_ID;
     string<40>	MEMO;
     int8      	UPD_TIME;
     string<6> 	HOLD_TYPE;
     string<16>	BROKE_ID;
     int8      	DEFAULT_PORTFOLIO_ID;
     tree<BROKE_ID>	BROKE_ID_INDEX;
     tree<HOLD_TYPE>	HOLD_TYPE_INDEX;
     tree<HOLD_TYPE,BROKE_ID>	HOLD_TYPE_BROKE_ID_INDEX;
     tree<HOLDER_ACC>	HOLDER_ACC_INDEX;
     tree<HOLDER_ACC,BROKE_ID>	HOLDER_ACC_BROKE_ID_INDEX;
     tree<HOLDER_ACC,HOLD_TYPE>	HOLDER_ACC_HOLD_TYPE_INDEX;
     tree<HOLDER_ACC,HOLD_TYPE,BROKE_ID>	HOLDER_ACC_HOLD_TYPE_BROKE_ID_INDEX;
     tree<SEAT_ID>	SEAT_ID_INDEX;
     tree<SEAT_ID,BROKE_ID>	SEAT_ID_BROKE_ID_INDEX;
     tree<SEAT_ID,HOLD_TYPE>	SEAT_ID_HOLD_TYPE_INDEX;
     tree<SEAT_ID,HOLD_TYPE,BROKE_ID>	SEAT_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<SEAT_ID,HOLDER_ACC>	SEAT_ID_HOLDER_ACC_INDEX;
     tree<SEAT_ID,HOLDER_ACC,BROKE_ID>	SEAT_ID_HOLDER_ACC_BROKE_ID_INDEX;
     tree<SEAT_ID,HOLDER_ACC,HOLD_TYPE>	SEAT_ID_HOLDER_ACC_HOLD_TYPE_INDEX;
     tree<SEAT_ID,HOLDER_ACC,HOLD_TYPE,BROKE_ID>	SEAT_ID_HOLDER_ACC_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE>	MK_CODE_INDEX;
     tree<MK_CODE,BROKE_ID>	MK_CODE_BROKE_ID_INDEX;
     tree<MK_CODE,HOLD_TYPE>	MK_CODE_HOLD_TYPE_INDEX;
     tree<MK_CODE,HOLD_TYPE,BROKE_ID>	MK_CODE_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,HOLDER_ACC>	MK_CODE_HOLDER_ACC_INDEX;
     tree<MK_CODE,HOLDER_ACC,BROKE_ID>	MK_CODE_HOLDER_ACC_BROKE_ID_INDEX;
     tree<MK_CODE,HOLDER_ACC,HOLD_TYPE>	MK_CODE_HOLDER_ACC_HOLD_TYPE_INDEX;
     tree<MK_CODE,HOLDER_ACC,HOLD_TYPE,BROKE_ID>	MK_CODE_HOLDER_ACC_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID>	MK_CODE_SEAT_ID_INDEX;
     tree<MK_CODE,SEAT_ID,BROKE_ID>	MK_CODE_SEAT_ID_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLD_TYPE>	MK_CODE_SEAT_ID_HOLD_TYPE_INDEX;
     tree<MK_CODE,SEAT_ID,HOLD_TYPE,BROKE_ID>	MK_CODE_SEAT_ID_HOLD_TYPE_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC>	MK_CODE_SEAT_ID_HOLDER_ACC_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,BROKE_ID>	MK_CODE_SEAT_ID_HOLDER_ACC_BROKE_ID_INDEX;
     tree<MK_CODE,SEAT_ID,HOLDER_ACC,HOLD_TYPE>	MK_CODE_SEAT_ID_HOLDER_ACC_HOLD_TYPE_INDEX;
     unique tree<MK_CODE,SEAT_ID,HOLDER_ACC,HOLD_TYPE,BROKE_ID>	MK_CODE_SEAT_ID_HOLDER_ACC_HOLD_TYPE_BROKE_ID_INDEX;
}

class ACC_MATCHO32
{
     int8      	FUND_ID;
     int8      	CELL_ID;
     int8      	PORTFOLIO_ID;
     string<30>	ACCOUNT_CODE;
     string<30>	ASSET_NO;
     string<30>	COMBI_NO;
     unique tree<PORTFOLIO_ID>	PORTFOLIO_ID_INDEX;
}

class DL_EX_ENTRUST
{
     string<20>	ENT_NO;
     string<20>	O32ENT_NO;
     string<20>	OTC_CODE;
     string<17>	REPORT_NO;
     string<50>	HD_ENTRUST_CODE;
     string<50>	H_ENTRUST_CODE;
     string<50>	ORIGIN_ENTRUST_CODE;
     string<20>	SEAT_ID;
     string<20>	HOLDER_ACC;
     string<20>	INSTRUCT_ID;
     int8      	FUND_ID;
     int8      	CELL_ID;
     int8      	PORTFOLIO_ID;
     string<5> 	MK_CODE;
     string<20>	STK_CODE;
     string<20>	STK_TYPE;
     string<6> 	BS_FLAG;
     string<6> 	OC_FLAG;
     string<6> 	SH_FLAG;
     double<8> 	ENT_PRICE;
     double<8> 	ENT_AMT;
     string<6> 	ENT_STATUS;
     string<9> 	ENT_TIME;
     double<8> 	DONE_CAP;
     double<8> 	DONE_AMT;
     int8   	DONE_NUM;
     double<8> 	DRAW_AMT;
     string<11>	TRADE_DATE;
     string<5> 	PRICE_TYPE;
     string<20>	CONTRACT_CODE;
     string<8> 	DRAW_TIME;
     double<8> 	REPORT_FEE;
     string<8> 	MATCH_TIME;
     string<50>	MATCH_REAL_ORDER_ID;
     int8      	ERR_ID;
     string<512>	ERR_MSG;
     string<6> 	UN_MK_CODE;
     string<50>	UN_NAME;
     string<20>	UN_CODE;
     string<5> 	BB_DIR;
     string<50> INTENTION_CODE;
     tree<TRADE_DATE>	TRADE_DATE_INDEX;
     unique tree<ENT_NO>	ENT_NO_INDEX;
}

class DL_EX_DONE
{
     string<128>	DONE_DATE;
     string<24>	MK_CODE;
     string<50>	TRADING_CODE;
     string<20>	OTC_CODE;
     string<20>	ENT_NO;
     string<50>	HD_ENTRUST_CODE;
     string<50>	HENTRUST_CODE;
     string<50>	ORIGIN_ENTRUST_CODE;
     string<256>	O32ENTRUST_NO;
     string<50>	INSTRUCT_ID;
     string<20>	SEAT_ID;
     string<20>	HOLDER_ACC;
     int8      	FUND_ID;
     int8      	CELL_ID;
     int8      	PORTFOLIO_ID;
     string<20>	STK_CODE;
     double<8> 	DONE_AMT;
     double<8> 	DONE_PRICE;
     double<8> 	DONE_CAP;
     string<6> 	KP_TP;
     string<6> 	BS_TP;
     string<128>	DONE_TIME;
     double<8> 	FEE;
     string<20>	UN_CODE;
     string<20>	CONTRACT_CODE;
     string<50> INTENTION_CODE;
     tree<DONE_DATE>	DONE_DATE_INDEX;
     unique tree<TRADING_CODE>	TRADING_CODE_INDEX;
}

class DL_EX_DONE_BACK
{
     string<17>	DONE_DATE;
     string<17>	DONE_TIME;
     string<17>	DONE_ID;
     string<17>	ENTRUST_NO;
     string<17>	DONE_QTY;
     string<17>	DONE_PRICE;
     string<17>	DONE_CAP;
     string<5> 	BS_FLAG;
     string<20>	OC_FLAG;
     int8      	DONE_FEE;
     int8      	EXTSYSTEM_ID;
     tree<DONE_ID>	DONE_ID_INDEX;
     tree<DONE_DATE>	DONE_DATE_INDEX;
     unique tree<DONE_DATE,DONE_ID>	DONE_DATE_DONE_ID_INDEX;
}

class MD_QUOTE
{
     string<17>	MK_CODE;
     string<17>	STK_CODE;
     double<8> 	LAST_PRICE;
     double<8> 	UPPER_LIMIT_PRICE;
     double<8> 	LOWER_LIMIT_PRICE;
     int8      	DONE_VOLUME;
     double<8> 	PRE_CLOSE_PRICE;
     string<20>	VARITY_NAME;
     double<8> 	OPEN_PRICE;
     double<8> 	CHG_PRICE;
     double<8> 	HIGHEST_PRICE;
     double<8> 	LOWEST_PRICE;
     int8      	TOTAL_BUY;
     int8      	TOTAL_SELL;
     int8      	BID_PRICE_1;
     int8      	BID_PRICE_2;
     int8      	BID_PRICE_3;
     int8      	BID_PRICE_4;
     int8      	BID_PRICE_5;
     int8      	BID_VOLUME_1;
     int8      	BID_VOLUME_2;
     int8      	BID_VOLUME_3;
     int8      	BID_VOLUME_4;
     int8      	BID_VOLUME_5;
     int8      	ASK_PRICE_1;
     int8      	ASK_PRICE_2;
     int8      	ASK_PRICE_3;
     int8      	ASK_PRICE_4;
     int8      	ASK_PRICE_5;
     int8      	ASK_VOLUME_1;
     int8      	ASK_VOLUME_2;
     int8      	ASK_VOLUME_3;
     int8      	ASK_VOLUME_4;
     int8      	ASK_VOLUME_5;
     double<8> 	TOTAL_ISSUED;
     double<8> 	TURNOVER;
     double<8> 	PRE_SETTLE_PRICE;
     double<8> 	CLOSE_PRICE;
     double<8> 	SETTLE_PRICE;
     tree<STK_CODE>	STK_CODE_INDEX;
     tree<MK_CODE>	MK_CODE_INDEX;
     unique tree<MK_CODE,STK_CODE>	MK_CODE_STK_CODE_INDEX;
}

class SYSTEM_MONITOR
{
     int8      	ID;
     string<6> 	MK_CODE;
     string<20>	CURRENT_DATES;
     string<20>	SYSTEM_STATE;
     string<30>	OPEN_TIME;
     string<30>	CLOSE_TIME;
     string<20>	OPEN_USER;
     string<20>	CLOSE_USER;
     string<50>	ERROR_MSG;
     unique tree<ID>	ID_INDEX;
}

class AGENT_CONTRACT_HOLD
{
     string<30>	CONTRACT_CODE;
     string<30>	HEDGE_CODE;
     double<8> 	POSITION_QTY;
     double<8> 	POSITION_COST;
     string<30>	CONTRACT_TYPE;
     double<8> 	TOTAL_COST;
     string<30>	DONE_DATE;
     string<30>	MK_CODE;
     string<6> 	POSITION_DIR;
     string<6> 	UN_MK_CODE;
     string<50>	UN_NAME;
     string<20>	UN_CODE;
     string<10>	BB_DIR;
     tree<POSITION_DIR>	POSITION_DIR_INDEX;
     tree<MK_CODE>	MK_CODE_INDEX;
     tree<MK_CODE,POSITION_DIR>	MK_CODE_POSITION_DIR_INDEX;
     tree<HEDGE_CODE>	HEDGE_CODE_INDEX;
     tree<HEDGE_CODE,POSITION_DIR>	HEDGE_CODE_POSITION_DIR_INDEX;
     tree<HEDGE_CODE,MK_CODE>	HEDGE_CODE_MK_CODE_INDEX;
     tree<HEDGE_CODE,MK_CODE,POSITION_DIR>	HEDGE_CODE_MK_CODE_POSITION_DIR_INDEX;
     tree<CONTRACT_CODE>	CONTRACT_CODE_INDEX;
     tree<CONTRACT_CODE,POSITION_DIR>	CONTRACT_CODE_POSITION_DIR_INDEX;
     tree<CONTRACT_CODE,MK_CODE>	CONTRACT_CODE_MK_CODE_INDEX;
     tree<CONTRACT_CODE,MK_CODE,POSITION_DIR>	CONTRACT_CODE_MK_CODE_POSITION_DIR_INDEX;
     tree<CONTRACT_CODE,HEDGE_CODE>	CONTRACT_CODE_HEDGE_CODE_INDEX;
     tree<CONTRACT_CODE,HEDGE_CODE,POSITION_DIR>	CONTRACT_CODE_HEDGE_CODE_POSITION_DIR_INDEX;
     tree<CONTRACT_CODE,HEDGE_CODE,MK_CODE>	CONTRACT_CODE_HEDGE_CODE_MK_CODE_INDEX;
     unique tree<CONTRACT_CODE,HEDGE_CODE,MK_CODE,POSITION_DIR>	CONTRACT_CODE_HEDGE_CODE_MK_CODE_POSITION_DIR_INDEX;
}

class TEM_FUND_HOLD
{
     string<17>	ENTRUST_NO;
     double<8> 	FROZEN_AMT;
     double<8> 	FROZEN_VOL;
     string<20>	STK_CODE;
     string<6> 	BS_FLAG;
     double<8> 	TOTAL_AMT;
     double<8> 	ENTRUST_FEE;
     double<8> 	SUM_DONE_AMT;
     double<8> 	DRAW_AMT;
     unique tree<ENTRUST_NO>	ENTRUST_NO_INDEX;
}

class CUST_STOCK_FEE
{
     string<16>	SKT_FEE_ID;
     string<6> 	MK_CODE;
     string<20>	STK_CODE;
     string<6> 	STK_TYPE;
     string<6> 	BS_DIR;
     string<6> 	FEE_TYPE;
     string<6> 	BIZBALAN_TYPE;
     string<6> 	IS_SCOPE;
     double<8> 	BIZBALAN_LOW;
     double<8> 	BIZBALAN_TOP;
     double<8> 	FEE_TOP;
     double<8> 	FEE_LOW;
     string<30>	REMARK;
     string<20>	UPDATE_TIME;
     string<20>	USER_ID;
     double<8> 	FEE_RATE;
     tree<BIZBALAN_TYPE>	BIZBALAN_TYPE_INDEX;
     tree<FEE_TYPE>	FEE_TYPE_INDEX;
     tree<FEE_TYPE,BIZBALAN_TYPE>	FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<BS_DIR>	BS_DIR_INDEX;
     tree<BS_DIR,BIZBALAN_TYPE>	BS_DIR_BIZBALAN_TYPE_INDEX;
     tree<BS_DIR,FEE_TYPE>	BS_DIR_FEE_TYPE_INDEX;
     tree<BS_DIR,FEE_TYPE,BIZBALAN_TYPE>	BS_DIR_FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<STK_TYPE>	STK_TYPE_INDEX;
     tree<STK_TYPE,BIZBALAN_TYPE>	STK_TYPE_BIZBALAN_TYPE_INDEX;
     tree<STK_TYPE,FEE_TYPE>	STK_TYPE_FEE_TYPE_INDEX;
     tree<STK_TYPE,FEE_TYPE,BIZBALAN_TYPE>	STK_TYPE_FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<STK_TYPE,BS_DIR>	STK_TYPE_BS_DIR_INDEX;
     tree<STK_TYPE,BS_DIR,BIZBALAN_TYPE>	STK_TYPE_BS_DIR_BIZBALAN_TYPE_INDEX;
     tree<STK_TYPE,BS_DIR,FEE_TYPE>	STK_TYPE_BS_DIR_FEE_TYPE_INDEX;
     tree<STK_TYPE,BS_DIR,FEE_TYPE,BIZBALAN_TYPE>	STK_TYPE_BS_DIR_FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<MK_CODE>	MK_CODE_INDEX;
     tree<MK_CODE,BIZBALAN_TYPE>	MK_CODE_BIZBALAN_TYPE_INDEX;
     tree<MK_CODE,FEE_TYPE>	MK_CODE_FEE_TYPE_INDEX;
     tree<MK_CODE,FEE_TYPE,BIZBALAN_TYPE>	MK_CODE_FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<MK_CODE,BS_DIR>	MK_CODE_BS_DIR_INDEX;
     tree<MK_CODE,BS_DIR,BIZBALAN_TYPE>	MK_CODE_BS_DIR_BIZBALAN_TYPE_INDEX;
     tree<MK_CODE,BS_DIR,FEE_TYPE>	MK_CODE_BS_DIR_FEE_TYPE_INDEX;
     tree<MK_CODE,BS_DIR,FEE_TYPE,BIZBALAN_TYPE>	MK_CODE_BS_DIR_FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<MK_CODE,STK_TYPE>	MK_CODE_STK_TYPE_INDEX;
     tree<MK_CODE,STK_TYPE,BIZBALAN_TYPE>	MK_CODE_STK_TYPE_BIZBALAN_TYPE_INDEX;
     tree<MK_CODE,STK_TYPE,FEE_TYPE>	MK_CODE_STK_TYPE_FEE_TYPE_INDEX;
     tree<MK_CODE,STK_TYPE,FEE_TYPE,BIZBALAN_TYPE>	MK_CODE_STK_TYPE_FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<MK_CODE,STK_TYPE,BS_DIR>	MK_CODE_STK_TYPE_BS_DIR_INDEX;
     tree<MK_CODE,STK_TYPE,BS_DIR,BIZBALAN_TYPE>	MK_CODE_STK_TYPE_BS_DIR_BIZBALAN_TYPE_INDEX;
     tree<MK_CODE,STK_TYPE,BS_DIR,FEE_TYPE>	MK_CODE_STK_TYPE_BS_DIR_FEE_TYPE_INDEX;
     tree<MK_CODE,STK_TYPE,BS_DIR,FEE_TYPE,BIZBALAN_TYPE>	MK_CODE_STK_TYPE_BS_DIR_FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID>	SKT_FEE_ID_INDEX;
     tree<SKT_FEE_ID,BIZBALAN_TYPE>	SKT_FEE_ID_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,FEE_TYPE>	SKT_FEE_ID_FEE_TYPE_INDEX;
     tree<SKT_FEE_ID,FEE_TYPE,BIZBALAN_TYPE>	SKT_FEE_ID_FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,BS_DIR>	SKT_FEE_ID_BS_DIR_INDEX;
     tree<SKT_FEE_ID,BS_DIR,BIZBALAN_TYPE>	SKT_FEE_ID_BS_DIR_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,BS_DIR,FEE_TYPE>	SKT_FEE_ID_BS_DIR_FEE_TYPE_INDEX;
     tree<SKT_FEE_ID,BS_DIR,FEE_TYPE,BIZBALAN_TYPE>	SKT_FEE_ID_BS_DIR_FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,STK_TYPE>	SKT_FEE_ID_STK_TYPE_INDEX;
     tree<SKT_FEE_ID,STK_TYPE,BIZBALAN_TYPE>	SKT_FEE_ID_STK_TYPE_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,STK_TYPE,FEE_TYPE>	SKT_FEE_ID_STK_TYPE_FEE_TYPE_INDEX;
     tree<SKT_FEE_ID,STK_TYPE,FEE_TYPE,BIZBALAN_TYPE>	SKT_FEE_ID_STK_TYPE_FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,STK_TYPE,BS_DIR>	SKT_FEE_ID_STK_TYPE_BS_DIR_INDEX;
     tree<SKT_FEE_ID,STK_TYPE,BS_DIR,BIZBALAN_TYPE>	SKT_FEE_ID_STK_TYPE_BS_DIR_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,STK_TYPE,BS_DIR,FEE_TYPE>	SKT_FEE_ID_STK_TYPE_BS_DIR_FEE_TYPE_INDEX;
     tree<SKT_FEE_ID,STK_TYPE,BS_DIR,FEE_TYPE,BIZBALAN_TYPE>	SKT_FEE_ID_STK_TYPE_BS_DIR_FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,MK_CODE>	SKT_FEE_ID_MK_CODE_INDEX;
     tree<SKT_FEE_ID,MK_CODE,BIZBALAN_TYPE>	SKT_FEE_ID_MK_CODE_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,MK_CODE,FEE_TYPE>	SKT_FEE_ID_MK_CODE_FEE_TYPE_INDEX;
     tree<SKT_FEE_ID,MK_CODE,FEE_TYPE,BIZBALAN_TYPE>	SKT_FEE_ID_MK_CODE_FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,MK_CODE,BS_DIR>	SKT_FEE_ID_MK_CODE_BS_DIR_INDEX;
     tree<SKT_FEE_ID,MK_CODE,BS_DIR,BIZBALAN_TYPE>	SKT_FEE_ID_MK_CODE_BS_DIR_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,MK_CODE,BS_DIR,FEE_TYPE>	SKT_FEE_ID_MK_CODE_BS_DIR_FEE_TYPE_INDEX;
     tree<SKT_FEE_ID,MK_CODE,BS_DIR,FEE_TYPE,BIZBALAN_TYPE>	SKT_FEE_ID_MK_CODE_BS_DIR_FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,MK_CODE,STK_TYPE>	SKT_FEE_ID_MK_CODE_STK_TYPE_INDEX;
     tree<SKT_FEE_ID,MK_CODE,STK_TYPE,BIZBALAN_TYPE>	SKT_FEE_ID_MK_CODE_STK_TYPE_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,MK_CODE,STK_TYPE,FEE_TYPE>	SKT_FEE_ID_MK_CODE_STK_TYPE_FEE_TYPE_INDEX;
     tree<SKT_FEE_ID,MK_CODE,STK_TYPE,FEE_TYPE,BIZBALAN_TYPE>	SKT_FEE_ID_MK_CODE_STK_TYPE_FEE_TYPE_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,MK_CODE,STK_TYPE,BS_DIR>	SKT_FEE_ID_MK_CODE_STK_TYPE_BS_DIR_INDEX;
     tree<SKT_FEE_ID,MK_CODE,STK_TYPE,BS_DIR,BIZBALAN_TYPE>	SKT_FEE_ID_MK_CODE_STK_TYPE_BS_DIR_BIZBALAN_TYPE_INDEX;
     tree<SKT_FEE_ID,MK_CODE,STK_TYPE,BS_DIR,FEE_TYPE>	SKT_FEE_ID_MK_CODE_STK_TYPE_BS_DIR_FEE_TYPE_INDEX;
     unique tree<SKT_FEE_ID,MK_CODE,STK_TYPE,BS_DIR,FEE_TYPE,BIZBALAN_TYPE>	SKT_FEE_ID_MK_CODE_STK_TYPE_BS_DIR_FEE_TYPE_BIZBALAN_TYPE_INDEX;
}

class HEDGE_ADVICE
{
     string<20>	TRADE_DATE;
     string<50>	CONTRACT_CODE;
     string<50>	INTENTION_CODE;
     string<50>	HEDGE_CODE;
     string<5> 	HUN_TYPE;
     string<80>	HUN_NAME;
     string<50>	HUN_CODE;
     double<8> 	HEDGE_PRICE;
     string<5> 	CONTRACT_MONTHS;
     double<8> 	CONTRACT_MULTIPLIER;
     int8      	HUN_QTY;
     double<8> 	MIN_TRANSACTION;
     string<5> 	PRICE_WAY;
     string<5> 	HUN_DIR;
     string<5> 	OC_SYMBOL;
     string<5> 	SH_SYMBOL;
     string<5> 	REF_PRICE_TYPE;
     int8      	FUND_ID;
     int8      	CELL_ID;
     int8      	PORTFOLIO_ID;
     int8      	TIME_INTER;
     int8      	START_TIME;
     int8      	END_TIME;
     string<5> 	TRADING_STATUS;
     int8      	TRADING_QTY;
     string<5> 	MK_CODE;
     unique tree<HEDGE_CODE>	HEDGE_CODE_INDEX;
}

class HEDGE_INSTRUCTION
{
     string<50>	CONTRACT_CODE;
     string<50>	INTENTION_CODE;
     string<50>	HD_ENTRUST_CODE;
     string<50>	STK_CODE;
     string<80>	STK_NAME;
     double<8> 	ENTRUST_PRICE;
     int8      	ENTRUST_QTY;
     double<8> 	CONTRACT_MULTIPLIER;
     string<5> 	BS_FLAG;
     string<5> 	HD_ENTRUST_STATUS;
     string<50>	LEG_CODE;
     string<5> 	TRADING_STATUS;
     string<6> 	STK_TYPE;
     double<8> 	MIN_TRANSACTION;
     double<8> 	WEIGHT;
     string<5> 	PRICE_MODE;
     string<5> 	OFFSET_FLAG;
     string<5> 	REF_PRICE_TYPE;
     int8      	HEDGE_ACCOUNT;
     string<5> 	INTENTION_TYPE;
     string<5> 	COMMAND_TYPE;
     string<30>	CONTRACT_NAME;
     string<8> 	TRADE_TIME;
     string<10>	TRADE_DATE;
     string<5> 	MK_CODE;
     string<6> 	SH_FLAG;
     string<50>	HD_INSTRUCTION_CODE;
     string<5> 	ENTRUST_WAY;
     int8      	TIME_INTER;
     string<8> 	START_TIME;
     string<8> 	END_TIME;
     string<5> 	TRADING_QTY;
     int8      	MAX_PEND_QTY;
     int8      	REF_PRICE_DIF;
     string<50>	UN_CODE;
     string<80>	UN_NAME;
     string<2> 	BB_DIR;
     unique tree<HD_ENTRUST_CODE>	HD_ENTRUST_CODE_INDEX;
}

class ORIGINAL_ORDER
{
     string<50>	ORIGIN_ENTRUST_CODE;
     string<50>	CONTRACT_CODE;
     string<10>	TRADE_DATE;
     string<10>	TRADE_TIME;
     string<50>	INTENTION_CODE;
     string<6> 	STK_TYPE;
     string<50>	STK_NAME;
     string<20>	STK_CODE;
     string<6> 	UN_MK_CODE;
     string<50>	UN_NAME;
     string<20>	UN_CODE;
     double<8> 	ENTRUST_PRICE;
     int8      	ENTRUST_QTY;
     string<6> 	PRICE_MODE;
     string<6> 	BS_FLAG;
     string<6> 	OC_FLAG;
     string<6> 	REF_PRICE_TYPE;
     int8      	PORTFOLIO_ID;
     string<50>	LEG_CODE;
     string<6> 	MK_CODE;
     string<6> 	STATUS;
     string<50>	HD_INSTRUCTION_CODE;
     string<5> 	SH_FLAG;
     string<50>	HD_ENTRUST_CODE;
     int8      	ERROR_NO;
     string<50>	ERROR_MSG;
     string<10>	BB_DIR;
     string<50>	ALGO_STRATEGY_ID;
     string<50>	REQUEST_ID;
     int8   	AMT_SENDED;
     string<100>	EVENT_MSG;
     tree<TRADE_DATE>	TRADE_DATE_INDEX;
     tree<ORIGIN_ENTRUST_CODE>	ORIGIN_ENTRUST_CODE_INDEX;
     unique tree<ORIGIN_ENTRUST_CODE,TRADE_DATE>	ORIGIN_ENTRUST_CODE_TRADE_DATE_INDEX;
}

class DL_OTC_ENTRUST
{
     string<10>	TRADE_DATE;
     string<5> 	MK_CODE;
     string<20>	OTC_ENTRUST_CODE;
     string<50>	ORIGIN_ENTRUST_CODE;
     string<20>	HD_INSTRUCTION_CODE;
     string<50>	HENTRUST_CODE;
     int8      	FUND_ID;
     int8      	CELL_ID;
     int8      	PORTFOLIO_ID;
     string<20>	STK_CODE;
     string<5> 	BS_FLAG;
     string<5> 	OFFSET_FLAG;
     string<5> 	SH_FLAG;
     string<5> 	ORDER_PRICE_TYPE;
     string<5> 	STK_TYPE;
     double<8> 	ENTRUST_PRICE;
     int8   	ENTRUST_QTY;
     string<5> 	STATUS;
     double<8> 	DONE_AMT;
     int8   	DONE_NUM;
     double<8> 	DRAW_QTY;
     string<20>	E_TIME;
     string<20>	ENT_TIME;
     string<20>	MATCH_TIME;
     string<50>	ERR_MSG;
     string<50>	MEMO;
     int8      	ERR_ID;
     string<5> 	ENT_PROP;
     string<5> 	DONE_ATTRIBUTE;
     string<5> 	ORDER_OPER_TYPE;
     string<5> 	ORDER_TYPE;
     string<20>	CD_TIME;
     string<5> 	TRADE_TYPE;
     double<8> 	DONE_QTY;
     string<20>	CONTRACT_CODE;
     string<20>	HD_ENTRUST_CODE;
     string<20>	LEG_CODE;
     string<20>	UN_CODE;
     string<20>	UN_NAME;
     string<5> 	UN_MK_CODE;
     string<50>	MATCH_ORDER_ID;
     string<10>	BB_DIR;
     tree<OTC_ENTRUST_CODE>	OTC_ENTRUST_CODE_INDEX;
     tree<TRADE_DATE>	TRADE_DATE_INDEX;
     unique tree<TRADE_DATE,OTC_ENTRUST_CODE>	TRADE_DATE_OTC_ENTRUST_CODE_INDEX;
}

class OTC_TEM_FUND_HOLD
{
     string<20>	ENTRUST_NO;
     double<8> 	FROZEN_AMT;
     double<8> 	FROZEN_VOL;
     string<20>	STK_CODE;
     string<6> 	BS_FLAG;
     double<8> 	TOTAL_AMT;
     double<8> 	ENTRUST_FEE;
     double<8> 	SUM_DONE_AMT;
     unique tree<ENTRUST_NO>	ENTRUST_NO_INDEX;
}

class ACC_OTC_PTFLHLD
{
     int8      	FUND_ID;
     int8      	CELL_ID;
     int8      	PORTFOLIO_ID;
     string<6> 	MK_CODE;
     string<20>	STK_CODE;
     string<6> 	STK_TP;
     string<6> 	POSITION_DIR;
     string<6> 	HEDGING_FLAG;
     double<8> 	STK_QTY;
     double<8> 	STK_DEAL_QTY;
     double<8> 	INS_QTY;
     double<8> 	STK_COST;
     double<8> 	BUY_QTY;
     double<8> 	BUY_CURR;
     double<8> 	BUY_FEE;
     double<8> 	SELL_QTY;
     double<8> 	STK_SUM_PROFIT;
     double<8> 	SELL_CURR;
     double<8> 	SELL_FEE;
     double<8> 	MARGIN;
     double<8> 	THEORETIC_MARGIN;
     double<8> 	ACCU_FEE;
     double<8> 	STK_SUM_COST;
     double<8> 	SELL_PROFIT;
     double<8> 	ESELL_PROFIT;
     tree<POSITION_DIR>	POSITION_DIR_INDEX;
     tree<STK_CODE>	STK_CODE_INDEX;
     tree<STK_CODE,POSITION_DIR>	STK_CODE_POSITION_DIR_INDEX;
     tree<MK_CODE>	MK_CODE_INDEX;
     tree<MK_CODE,POSITION_DIR>	MK_CODE_POSITION_DIR_INDEX;
     tree<MK_CODE,STK_CODE>	MK_CODE_STK_CODE_INDEX;
     tree<MK_CODE,STK_CODE,POSITION_DIR>	MK_CODE_STK_CODE_POSITION_DIR_INDEX;
     tree<PORTFOLIO_ID>	PORTFOLIO_ID_INDEX;
     tree<PORTFOLIO_ID,POSITION_DIR>	PORTFOLIO_ID_POSITION_DIR_INDEX;
     tree<PORTFOLIO_ID,STK_CODE>	PORTFOLIO_ID_STK_CODE_INDEX;
     tree<PORTFOLIO_ID,STK_CODE,POSITION_DIR>	PORTFOLIO_ID_STK_CODE_POSITION_DIR_INDEX;
     tree<PORTFOLIO_ID,MK_CODE>	PORTFOLIO_ID_MK_CODE_INDEX;
     tree<PORTFOLIO_ID,MK_CODE,POSITION_DIR>	PORTFOLIO_ID_MK_CODE_POSITION_DIR_INDEX;
     tree<PORTFOLIO_ID,MK_CODE,STK_CODE>	PORTFOLIO_ID_MK_CODE_STK_CODE_INDEX;
     unique tree<PORTFOLIO_ID,MK_CODE,STK_CODE,POSITION_DIR>	PORTFOLIO_ID_MK_CODE_STK_CODE_POSITION_DIR_INDEX;
}

class DL_OTC_DONE
{
     string<10>	DONE_DATE;
     string<4> 	MK_CODE;
     string<50>	DONE_CODE;
     int8      	FUND_ID;
     int8      	CELL_ID;
     int8      	PORTFOLIO_ID;
     string<50>	SUPER_ENTRUST_CODE;
     string<50>	SUB_ENTRUST_CODE;
     string<50>	OTC_ENTRUST_CODE;
     string<50>	MATCH_ORDER_ID;
     string<50>	HD_INSTRUCTION_CODE;
     string<50>	HD_ENTRUST_CODE;
     string<50>	CONTRACT_CODE;
     string<50>	HUN_CODE;
     string<6> 	OFFSET_FLAG;
     double<8> 	DONE_QTY;
     double<8> 	DONE_PRICE;
     double<8> 	DONE_AMT;
     string<8> 	DONE_TIME;
     string<5> 	BS_DIR;
     double<8> 	HENTRUST_QTY;
     string<5> 	CONTRACT_TYPE;
     string<50>	UN_CODE;
     string<50>	INTENTION_CODE;
     string<5> 	DONE_TYPE;
     double<8> 	FEE;
     tree<OTC_ENTRUST_CODE>	OTC_ENTRUST_CODE_INDEX;
     tree<DONE_CODE>	DONE_CODE_INDEX;
     unique tree<DONE_CODE,OTC_ENTRUST_CODE>	DONE_CODE_OTC_ENTRUST_CODE_INDEX;
}

class OTC_AGENT_CONTRACT_HOLD
{
     string<50>	CONTRACT_CODE;
     string<20>	HEDGE_CODE;
     double<8> 	POSITION_QTY;
     double<8> 	POSITION_COST;
     string<10>	CONTRACT_TYPE;
     double<8> 	TOTAL_COST;
     string<20>	DONE_DATE;
     string<6> 	MK_CODE;
     string<6> 	POSITION_DIR;
     double<8> 	EXHA_POSITION_QTY;
     string<6> 	UN_MK_CODE;
     string<50>	UN_NAME;
     string<20>	UN_CODE;
     string<10>	BB_DIR;
     tree<POSITION_DIR>	POSITION_DIR_INDEX;
     tree<MK_CODE>	MK_CODE_INDEX;
     tree<MK_CODE,POSITION_DIR>	MK_CODE_POSITION_DIR_INDEX;
     tree<HEDGE_CODE>	HEDGE_CODE_INDEX;
     tree<HEDGE_CODE,POSITION_DIR>	HEDGE_CODE_POSITION_DIR_INDEX;
     tree<HEDGE_CODE,MK_CODE>	HEDGE_CODE_MK_CODE_INDEX;
     tree<HEDGE_CODE,MK_CODE,POSITION_DIR>	HEDGE_CODE_MK_CODE_POSITION_DIR_INDEX;
     tree<CONTRACT_CODE>	CONTRACT_CODE_INDEX;
     tree<CONTRACT_CODE,POSITION_DIR>	CONTRACT_CODE_POSITION_DIR_INDEX;
     tree<CONTRACT_CODE,MK_CODE>	CONTRACT_CODE_MK_CODE_INDEX;
     tree<CONTRACT_CODE,MK_CODE,POSITION_DIR>	CONTRACT_CODE_MK_CODE_POSITION_DIR_INDEX;
     tree<CONTRACT_CODE,HEDGE_CODE>	CONTRACT_CODE_HEDGE_CODE_INDEX;
     tree<CONTRACT_CODE,HEDGE_CODE,POSITION_DIR>	CONTRACT_CODE_HEDGE_CODE_POSITION_DIR_INDEX;
     tree<CONTRACT_CODE,HEDGE_CODE,MK_CODE>	CONTRACT_CODE_HEDGE_CODE_MK_CODE_INDEX;
     unique tree<CONTRACT_CODE,HEDGE_CODE,MK_CODE,POSITION_DIR>	CONTRACT_CODE_HEDGE_CODE_MK_CODE_POSITION_DIR_INDEX;
}

class INDEX_FEE_AND_ADDREC
{
     double<8> 	FEE;
     string<20>	ADDREC_ID;
     unique tree<ADDREC_ID>	ADDREC_ID_INDEX;
}

class CUST_MARGINRATE
{
     string<30>	FUT_FEE_ID;
     string<4> 	MK_CODE;
     string<20>	STK_CODE;
     string<16>	BROKE_ID;
     string<20>	UPDATE_TIME;
     double<8> 	BSPEC_MARGIN_AMT;
     double<8> 	BSPEC_MARGIN_RATE;
     double<8> 	BHEDGE_MARGIN_AMT;
     double<8> 	BHEDGE_MARGIN_RATE;
     double<8> 	SSPEC_MARGIN_AMT;
     double<8> 	SSPEC_MARGIN_RATE;
     double<8> 	SHEDGE_MARGIN_AMT;
     double<8> 	SHEDGE_MARGIN_RATE;
     double<8> 	BARBI_MARGIN_AMT;
     double<8> 	BARBI_MARGIN_RATE;
     double<8> 	SARBI_MARGIN_AMT;
     double<8> 	SARBI_MARGIN_RATE;
     double<8> 	SPECOPEN_COMMI_AMT;
     double<8> 	SPECOPEN_COMMI_RATE;
     double<8> 	SPECOT_COMMI_AMT;
     double<8> 	SPECOT_COMMI_RATE;
     double<8> 	HEDGEOPEN_COMMI_AMT;
     double<8> 	HEDGEOPEN_COMMI_RATE;
     double<8> 	HEDGESPECOT_COMMI_AMT;
     double<8> 	HEDGESPECOT_COMMI_RATE;
     double<8> 	ARBIOPEN_COMMI_AMT;
     double<8> 	ARBIOPEN_COMMI_RATE;
     double<8> 	ARBISPECOT_COMMI_AMT;
     double<8> 	ARBISPECOT_COMMI_RATE;
     double<8> 	DEFERRED_CHARGE_RATE;
     double<8> 	SPEC_DELIVERY_AMT;
     double<8> 	SPEC_DELIVERY_RATE;
     double<8> 	HEDGE_DELIVERY_AMT;
     double<8> 	HEDGE_DELIVERY_RATE;
     double<8> 	ARBI_DELIVERY_AMT;
     double<8> 	ARBI_DELIVERY_RATE;
     double<8> 	BEXERCISE_AMT;
     double<8> 	BEXERCISE_RATE;
     double<8> 	SEXERCISE_AMT;
     double<8> 	SEXERCISE_RATE;
     double<8> 	MIN_MARGIN;
     double<8> 	SPECOFFSET_COMMI_AMT;
     double<8> 	SPECOFFSET_COMMI_RATE;
     double<8> 	HEDGEOFFSET_COMMI_AMT;
     double<8> 	HEDGEOFFSET_COMMI_RATE;
     double<8> 	ARBIOFFSET_COMMI_AMT;
     double<8> 	ARBIOFFSET_COMMI_RATE;
     tree<STK_CODE>	STK_CODE_INDEX;
     tree<MK_CODE>	MK_CODE_INDEX;
     unique tree<MK_CODE,STK_CODE>	MK_CODE_STK_CODE_INDEX;
}

class STOCK_INDEX_FUTURE_TEM
{
     string<17>	ENTRUST_NO;
     int8      	DONE_HANDS;
     double<8> 	DONE_AMT;
     double<8> 	HANDLE_FEE;
     double<8> 	MARGIN;
     double<8> 	FEE;
     int8      	FROZEN_HOLDS;
     string<6> 	BS_FLAG;
     unique tree<ENTRUST_NO>	ENTRUST_NO_INDEX;
}

class HOLD_DETAILS
{
     string<6> 	BSTP;
     int8      	PTFL_ID;
     string<6> 	MK_CODE;
     string<20>	VARI_CODE;
     double<8> 	OPEN_PRICE;
     double<8> 	HOLD_HANDS;
     string<20>	OPEN_DATE;
     string<20>	OPEN_TIME;
     string<20>	DEAL_NO;
     double<8> 	SETTLEMENT_PRICE;
     double<8> 	CLOSED_HANDS;
     double<8> 	HOLD_MARGIN;
     unique tree<DEAL_NO>	DEAL_NO_INDEX;
}

class RISK_CONTROLCHILD
{
     string<20>	RISK_ID;
     string<20>	STK_CODE;
     string<20>	STK_NAME;
     string<25>	COMMISSIONED;
     string<25>	SECTION_IN;
     tree<SECTION_IN>	SECTION_IN_INDEX;
     tree<STK_CODE>	STK_CODE_INDEX;
     tree<STK_CODE,SECTION_IN>	STK_CODE_SECTION_IN_INDEX;
     tree<RISK_ID>	RISK_ID_INDEX;
     tree<RISK_ID,SECTION_IN>	RISK_ID_SECTION_IN_INDEX;
     tree<RISK_ID,STK_CODE>	RISK_ID_STK_CODE_INDEX;
     unique tree<RISK_ID,STK_CODE,SECTION_IN>	RISK_ID_STK_CODE_SECTION_IN_INDEX;
}

class RISK_TYPE_MAINTAINING
{
     string<20>	RISK_ID;
     string<5> 	RISK_TYPE;
     string<5> 	IS_RATIO;
     string<5> 	IS_ENABLE;
     string<400>	EXPLAIN;
     string<3000>	FUND_IDS;
     string<4000>	CELL_IDS;
     string<4000>	PORTFOLIO_IDS;
     string<4000>	STK_CODES;
     string<20>	COMPARE_DIR;
     string<5> 	FUND_CONTROL;
     string<5> 	SECURITIES_CONTROL;
     double<8> 	WARNING1;
     string<5> 	WARNING1_UNITS;
     string<5> 	WARNING1_OPERATE;
     double<8> 	WARNING2;
     string<5> 	WARNING2_UNITS;
     string<5> 	WARNING2_OPERATE;
     string<20>	MODIFY_DATE;
     string<20>	MODIFY_TIME;
     string<5> 	CONTROL_TYPE;
     string<5> 	COMMISSIONED;
     string<5> 	CALCULATED;
     string<5> 	COMP_PRICES;
     string<5> 	INVESTMENT_TYPES;
     string<5> 	DENOMINATOR_TYPE;
     string<5> 	SUBMIT_STATUS;
     string<5> 	CONTROL_LEVEL;
     string<5> 	AUDIT_STATUS;
     string<5> 	AUDIT_LEVEL;
     string<40>	AUDIT_TIME;
     string<5> 	AUDIT_RESULT;
     string<20>	USER_NAME;
     string<20>	USER_ID;
     string<50>	REMARK;
     string<20>	AUDIT_NAME;
     string<5> 	PRICE_WAY;
     string<5> 	AUDIT_SCOPE;
     tree<RISK_TYPE>	RISK_TYPE_INDEX;
     tree<RISK_ID>	RISK_ID_INDEX;
     unique tree<RISK_ID,RISK_TYPE>	RISK_ID_RISK_TYPE_INDEX;
}

class RISK_PIPE_LINE
{
     string<10>	TRADE_DATE;
     string<50>	SERIAL_NO;
     string<50>	HD_ENTRUST_CODE;
     string<50>	ENTRUST_NO;
     string<50>	HENTRUST_CODE;
     int8      	FUND_ID;
     int8      	CELL_ID;
     int8      	PROFL_ID;
     string<10>	CONTROL_LEVEL;
     string<20>	RISK_TYPE;
     int8      	RISK_RATIO_KIND;
     string<100>	RISK_MEMO;
     string<6> 	MK_CODE;
     string<20>	STK_CODE;
     string<32>	STK_NAME;
     int8      	WARNING_OPERATION;
     int8      	WARNING_LEVEL;
     double<8> 	RESULT_VALUE;
     double<8> 	THRESHOLD_VALUE;
     string<20>	RISK_ID;
     string<6> 	CONTROL_TYPE;
     string<6> 	FUND_CONTROL;
     string<6> 	SECURITIES_CONTROL;
     string<100>	RESULT_INFO;
     string<20>	EXEC_TIME;
     string<100>	ADD_INFO;
     double<8> 	ENT_AMT;
     double<8> 	ENT_PRICE;
     string<6> 	BS_DIR;
     string<6> 	OFFSET_FLAG;
     string<6> 	COMPARE;
     string<18>	UNIT_NAME;
     int8      	FP_NO;
     int8      	POLICY_NO;
     int8      	BATCH_NO;
     string<5> 	AUDIT_STATUS;
     string<5> 	AUDIT_LEVEL;
     string<10>	CREATE_AUDIT_TIME;
     string<5> 	AUDIT_RESULT;
     tree<RISK_ID>	RISK_ID_INDEX;
     tree<ENTRUST_NO>	ENTRUST_NO_INDEX;
     unique tree<ENTRUST_NO,RISK_ID>	ENTRUST_NO_RISK_ID_INDEX;
}

class RISK_ADVICE_RECORD
{
     string<20>	RISK_ID;
     string<5> 	RISK_TYPE;
     string<5> 	RISK_RESULT;
     string<50>	RISK_DESCRIBE;
     string<20>	RISK_TIME;
     string<20>	RISK_SERIAL_ID;
     double<8> 	RISK_CAL_RESULT;
     string<20>	RISK_RANGE_ID;
     string<20>	HEDGE_CODE;
     unique tree<RISK_ID>	RISK_ID_INDEX;
}

class DL_MANAGE_TRADE_INTENTION
{
     string<50>	INTENTION_CODE;
     string<10>	TRADE_DATE;
     string<80>	UN_NAME;
     string<50>	UN_CODE;
     string<5> 	OC_SYMBOL;
     string<5> 	BB_DIR;
     int8      	INTENTION_QTY;
     int8      	ACTUAL_QTY;
     double<8> 	CONTRACT_NUMBER;
     double<8> 	INTENTION_PRICE;
     double<8> 	ACTUAL_PRICE;
     double<8> 	UN_PRINCIPAL;
     string<20>	INTENTION_START_TIME;
     string<20>	INTENTION_END_TIME;
     string<5> 	BUSINESS_TYPE;
     string<5> 	PRICE_WAY;
     string<5> 	REF_PRICE_TYPE;
     int8      	TIME_INTER;
     string<5> 	ENTRUST_WAY;
     double<8> 	ENTRUST_QTY;
     double<8> 	HEDGE_COST;
     int8      	IS_VALID;
     string<50>	CONTRACT_CODE;
     string<5> 	CONTRACT_TYPE;
     string<80>	CONTRACT_NAME;
     string<200>	BELONGS_CUSTOMER;
     double<8> 	PRINCIPAL;
     double<8> 	CREDIT_AMT;
     double<8> 	PERFORM_SECURITY_RATIO;
     double<8> 	PERFORM_SECURITY_VALUE;
     double<8> 	INITIAL_TRADE_AMT;
     string<5> 	AUDIT_STATUS;
     string<5> 	INTENTION_STATUS;
     string<5> 	ADVICE_STARUS;
     double<8> 	UENTRUST_PRICE;
     string<5> 	UENTRUST_STATUS;
     string<5> 	INTENTION_TYPE;
     string<20>	LEG_NUM;
     string<30>	TRADE_TIME;
     double<8> 	ACTUAL_UN_PRINCIPAL;
     string<5> 	AUDIT_LEVEL;
     string<5> 	AUDIT_RESULT;
     string<20>	CREATE_AUDIT_TIME;
     string<5> 	AUDIT_TYPE;
     string<5> 	MK_CODE;
     string<5> 	RISK_RESULT;
     string<5> 	CURRENCY;
     string<5> 	UN_TYPE;
     tree<TRADE_DATE>	TRADE_DATE_INDEX;
     tree<INTENTION_CODE>	INTENTION_CODE_INDEX;
     unique tree<INTENTION_CODE,TRADE_DATE>	INTENTION_CODE_TRADE_DATE_INDEX;
}

class CONTRACT_EXHA_POSITION
{
     string<50>	CONTRACT_CODE;
     string<50>	HEDGE_NAME;
     string<80>	HEDGE_CODE;
     double<8> 	POSITION_MC;
     double<8> 	POSITION_QTY;
     string<5> 	POSITION_DIR;
     double<8> 	POSITION_COST;
     double<8> 	HEDGE_PNL;
     double<8> 	UN_LAST_PRICE;
     double<8> 	FLOAT_YIELD_RATE;
     string<5> 	CONTRACT_TYPE;
     string<20>	LEG_NUM;
     string<50>	INTENTION_CODE;
     string<20>	ME_NAME;
     string<20>	ME_CODE;
     double<8> 	OTCMEV_POSITION_MC;
     double<8> 	OTCMEV_POSITION_QTY;
     double<8> 	OTCMEV_COST;
     string<5> 	BB_DIR;
     double<8> 	EXHA_POSITION_MC;
     double<8> 	EXHA_POSITION_QTY;
     double<8> 	TOTAL_COST_CNY;
     double<8> 	TOTAL_COST_FOR;
     double<8> 	STK_DEAL_QTY;
     double<8> 	STK_FORZ_QTY;
     string<5> 	CURRENCY;
     double<8> 	EXCHANGE_RATE_BUY;
     double<8> 	EXCHANGE_RATE_SELL;
     string<10>	CURR_TRADE_DATE;
     string<5> 	MK_CODE;
     tree<MK_CODE>	MK_CODE_INDEX;
     tree<POSITION_DIR>	POSITION_DIR_INDEX;
     tree<POSITION_DIR,MK_CODE>	POSITION_DIR_MK_CODE_INDEX;
     tree<HEDGE_CODE>	HEDGE_CODE_INDEX;
     tree<HEDGE_CODE,MK_CODE>	HEDGE_CODE_MK_CODE_INDEX;
     tree<HEDGE_CODE,POSITION_DIR>	HEDGE_CODE_POSITION_DIR_INDEX;
     tree<HEDGE_CODE,POSITION_DIR,MK_CODE>	HEDGE_CODE_POSITION_DIR_MK_CODE_INDEX;
     tree<CONTRACT_CODE>	CONTRACT_CODE_INDEX;
     tree<CONTRACT_CODE,MK_CODE>	CONTRACT_CODE_MK_CODE_INDEX;
     tree<CONTRACT_CODE,POSITION_DIR>	CONTRACT_CODE_POSITION_DIR_INDEX;
     tree<CONTRACT_CODE,POSITION_DIR,MK_CODE>	CONTRACT_CODE_POSITION_DIR_MK_CODE_INDEX;
     tree<CONTRACT_CODE,HEDGE_CODE>	CONTRACT_CODE_HEDGE_CODE_INDEX;
     tree<CONTRACT_CODE,HEDGE_CODE,MK_CODE>	CONTRACT_CODE_HEDGE_CODE_MK_CODE_INDEX;
     tree<CONTRACT_CODE,HEDGE_CODE,POSITION_DIR>	CONTRACT_CODE_HEDGE_CODE_POSITION_DIR_INDEX;
     unique tree<CONTRACT_CODE,HEDGE_CODE,POSITION_DIR,MK_CODE>	CONTRACT_CODE_HEDGE_CODE_POSITION_DIR_MK_CODE_INDEX;
}

class STK_RSK_REFLECTION
{
     string<40>	STOCK_VARIETY;
     string<40>	RISK_RANGE;
     unique tree<STOCK_VARIETY>	STOCK_VARIETY_INDEX;
}

class RISK_ADVICE_RANGE
{
     string<20>	RISK_RANGE_ID;
     string<20>	RISK_ID;
     string<50>	STK_CODE;
     string<80>	STK_NAME;
     string<80>	SECTION;
     unique tree<RISK_RANGE_ID>	RISK_RANGE_ID_INDEX;
}

class RISK_HEDGE_ADVICE
{
     string<20>	RISK_ID;
     double<8> 	RISK_THRESHOLD;
     string<5> 	COMPARE_DIR;
     string<5> 	ADVICE_CONTROL_METHOD;
     string<50>	RISK_DESCRIBE;
     string<5> 	ADVICE_RISK_TYPE;
     string<5> 	INITIATE_MODE;
     unique tree<RISK_ID>	RISK_ID_INDEX;
}

class HEDGE_ADVICE_RSK
{
     string<50>	HEDGE_CODE;
     string<20>	TRADE_DATE;
     string<20>	TRADE_TIME;
     string<50>	CONTRACT_CODE;
     string<50>	INTENTION_CODE;
     string<80>	UN_NAME;
     string<50>	UN_CODE;
     double<8> 	UN_PRINCIPAL;
     string<5> 	HUN_TYPE;
     string<80>	HUN_NAME;
     string<50>	HUN_CODE;
     double<8> 	HEDGE_PRICE;
     string<5> 	CONTRACT_MONTHS;
     double<8> 	WEIGHT;
     double<8> 	CONTRACT_MULTIPLIER;
     int8      	HUN_QTY;
     double<8> 	MIN_TRANSACTION;
     string<5> 	PRICE_WAY;
     string<5> 	HUN_DIR;
     string<5> 	OC_SYMBOL;
     string<5> 	REF_PRICE_TYPE;
     string<10>	FORTHWITH_EN;
     string<5> 	ENTRUST_WAY;
     int8      	ENTRUST_QTY;
     int8      	TIME_INTER;
     string<20>	START_TIME;
     string<20>	END_TIME;
     string<50>	HEDGE_ACCOUNT;
     string<5> 	AUDIT_STATUS;
     int8      	IS_VALID;
     string<1> 	EXECUTING_STATUS;
     string<5> 	INTENTION_TYPE;
     string<20>	LEG_NUM;
     string<5> 	COMMAND_TYPE;
     string<80>	CONTRACT_NAME;
     string<5> 	TRADING_STATUS;
     string<5> 	TRADING_QTY;
     int8      	MAX_PEND_QTY;
     int8      	REF_PRICE_DIF;
     string<5> 	AUDIT_LEVEL;
     string<20>	CREATE_AUDIT_TIME;
     string<5> 	AUDIT_RESULT;
     string<5> 	HD_ENTRUST_STATUS;
     string<5> 	ENTRUST_TYPE;
     string<5> 	MK_CODE;
     string<5> 	HMK_CODE;
     unique tree<HEDGE_CODE>	HEDGE_CODE_INDEX;
}

class DL_RECKON
{
     string<6> 	OP_TYPE;
     string<6> 	IS_CLEAR;
     int8      	FUND_ID;
     int8      	CELL_ID;
     int8      	PORTFOLIO_ID;
     string<6> 	CAP_TYPE;
     string<5> 	MK_CODE;
     string<20>	STK_CODE;
     double<8> 	TRADE_QTY;
     double<8> 	TRADE_PRICE;
     double<8> 	TRADE_CURR;
     int8      	AUDIT_RECKON_ID;
     string<100>	REMARK;
     string<6> 	DEAL_STATUS;
     string<20>	USER_ID;
     string<30>	OP_TIME;
     string<200>	ERR_MSG;
     string<6> 	BS_TP;
     string<6> 	SH_TP;
     string<6> 	IS_MORTGAGE_CAP;
     string<6> 	IS_USEFUL;
     string<30>	CONTRACT_CODE;
     string<50>	CONTRACT_NAME;
     string<6> 	POSITION_DIR;
     unique tree<AUDIT_RECKON_ID>	AUDIT_RECKON_ID_INDEX;
}

class DL_ALGO_SUB_ORDER
{
     string<100>	ALGO_STRATEGY_ID;
     int8      	CREATE_TIME;
     string<20>	SECURITY_SYMBOL;
     string<6> 	SECURITY_EXCHANGE;
     string<6> 	BS_FLAG;
     string<6> 	OC_FLAG;
     double<8> 	ENTRUST_PRICE;
     double<8> 	ENTRUST_QTY;
     string<100>	ALGO_SUB_ORDER_ID;
     string<50>	TRADE_ORIGIN_ORDER_ID;
     string<6> 	SUB_ORDER_TYPE;
     string<100>	REQUEST_ID;
     unique tree<ALGO_SUB_ORDER_ID>	ALGO_SUB_ORDER_ID_INDEX;
}

class EXRATE_HKS_REFERENCE
{
     string<20>	USE_DATE;
     double<8> 	EXCHANGE_RATE_BUY;
     double<8> 	EXCHANGE_RATE_SALE;
     double<8> 	EXCHANGE_RATE_MID;
     string<30>	DATA_SOURCE;
     tree<DATA_SOURCE>	DATA_SOURCE_INDEX;
     tree<USE_DATE>	USE_DATE_INDEX;
     unique tree<USE_DATE,DATA_SOURCE>	USE_DATE_DATA_SOURCE_INDEX;
}

